specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: SquidGameFactory
    network: {{network}}
    source:
      address: "{{address}}"
      abi: SquidGameFactory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - OwnershipTransferred
        - SquidCreated
      abis:
        - name: SquidGameFactory
          file: ./abis/SquidGameFactory.json
      eventHandlers:
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: SquidCreated(address,uint256,uint256,uint256)
          handler: handleSquidCreated
      file: ./src/mapping.ts
templates:
  - name: SquidGame
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: SquidGame
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/squidGame.ts
      entities:
        - Game
        - Player
      abis:
        - name: SquidGame
          file: ./abis/SquidGame.json
      eventHandlers:
        - event: PlayerJoined(address,uint256)
          handler: handlePlayerJoinedGame
        - event: PlayerJoinedRound(uint256,address,uint256,bool)
          handler: handlePlayerJoinedRound
        - event: ChallengeStarted(uint256,int256,uint256)
          handler: handleChallengeStarted
        - event: ChallengeFinished(uint256,int256,uint256,bool)
          handler: handleChallengeFinished
        - event: ChallengeSetup(uint256,address,uint256)
          handler: handleChallengeSetup
        - event: VoteToQuit(uint256,address,uint256)
          handler: handleVoteToQuit
        - event: GameQuitted(uint256,uint256,uint256,uint256)
          handler: handleGameQuitted
        - event: Withdrawed(uint256,address,uint256)
          handler: handleWithdrawed
        - event: WithdrawedHouse(uint256,uint256)
          handler: handleWithdrawedHouse
